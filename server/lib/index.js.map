{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;qBAAkB,OAAO;;;;qBAAoB,OAAO;;;;mBAC9B,OAAO;;IAAjB,GAAG;;2BACK,gBAAgB;;;;AAEpC,IAAI,QAAQ,GAAG,wBAAM,eAAe,CAAC;IACjC,OAAO,GAAG,wBAAM,cAAc,CAAC,CAAC;;AAEpC,IAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,IAAM,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;;AAE/C,SAAS,MAAM,CAAC,MAAM,EAAC;AAC5B,MAAI,OAAO,GAAG,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM,EAAK;AAC9C,uBAAM,QAAQ,CAAC;;AAEb,aAAO,EAAE,yBAAQ,IAAI,EAAE;KACxB,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AAChB,UAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,eAAS,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B,eAAS,CAAC,OAAO,GAAG,OAAO,CAAC;AAC5B,eAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,SAAG,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAC5C,YAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,eAAO,CAAC,MAAM,CAAC,CAAC;OACjB,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;AACH,SAAO,OAAO,CAAC;CAChB","file":"index.js","sourcesContent":["import async from 'async'; import debug from 'debug';\nimport * as app  from './app';\nimport githash from './init/githash';\n\nlet logerror = debug('transac:error')\n  , loginfo = debug('transac:info');\n\nlet resources = {};\n    \nconst version = require('../../package.json').version;\n\nexport function create(params){\n  let promise = new Promise( (resolve, reject) => {\n    async.parallel({\n      //conn: rdb.init(params.rethinkdb),\n      githash: githash.init()\n    }, (err, init) => {\n      if(err) reject(err);\n      resources.conn = init.conn;\n      resources.version = version;\n      resources.githash = init.githash;\n      app.start(params, resources, (err, server) => {\n        if(err) reject(err);\n        resolve(server);\n      });\n    });\n  });\n  return promise;\n}\n"],"sourceRoot":"/home/redpelicans/timetrack/server/src"}