{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;qBAAkB,OAAO;;;;qBAAoB,OAAO;;;;mBAC9B,OAAO;;IAAjB,GAAG;;2BACS,gBAAgB;;;;0BACjB,eAAe;;;;AAEtC,IAAI,QAAQ,GAAG,wBAAM,eAAe,CAAC;IACjC,OAAO,GAAG,wBAAM,cAAc,CAAC,CAAC;;AAEpC,IAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,IAAM,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,OAAO,CAAC;;AAE/C,SAAS,MAAM,CAAC,MAAM,EAAC;AAC5B,MAAI,OAAO,GAAG,IAAI,OAAO,CAAE,UAAC,OAAO,EAAE,MAAM,EAAK;AAC9C,uBAAM,QAAQ,CAAC;AACb,QAAE,EAAE,6BAAW,MAAM,CAAC,EAAE,CAAC;AACzB,aAAO,EAAE,+BAAa;KACvB,EAAE,UAAC,GAAG,EAAE,IAAI,EAAK;AAChB,UAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,eAAS,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACvB,eAAS,CAAC,OAAO,GAAG,OAAO,CAAC;AAC5B,eAAS,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACjC,SAAG,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAC5C,YAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACpB,eAAO,CAAC,MAAM,CAAC,CAAC;OACjB,CAAC,CAAC;KACJ,CAAC,CAAC;GACJ,CAAC,CAAC;AACH,SAAO,OAAO,CAAC;CAChB","file":"index.js","sourcesContent":["import async from 'async'; import debug from 'debug';\nimport * as app  from './app';\nimport initGithash from './init/githash';\nimport initModels from './init/models';\n\nlet logerror = debug('transac:error')\n  , loginfo = debug('transac:info');\n\nlet resources = {};\n    \nconst version = require('../../package.json').version;\n\nexport function create(params){\n  let promise = new Promise( (resolve, reject) => {\n    async.parallel({\n      db: initModels(params.db),\n      githash: initGithash()\n    }, (err, init) => {\n      if(err) reject(err);\n      resources.db = init.db;\n      resources.version = version;\n      resources.githash = init.githash;\n      app.start(params, resources, (err, server) => {\n        if(err) reject(err);\n        resolve(server);\n      });\n    });\n  });\n  return promise;\n}\n"],"sourceRoot":"/home/redpelicans/timetrack/server/src"}