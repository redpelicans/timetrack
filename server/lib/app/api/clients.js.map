{"version":3,"sources":["app/api/clients.js"],"names":[],"mappings":";;;;;;;;;qBAAkB,OAAO;;;;sBACX,QAAQ;;;;sBACD,cAAc;;uBACE,eAAe;;AAE7C,SAAS,IAAI,CAAC,GAAG,EAAC;AACvB,KAAG,CAAC,GAAG,CAAC,UAAU,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC;AAC1C,uBAAM,SAAS,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,EAAE,UAAC,GAAG,EAAE,OAAO,EAAK;AAC5D,UAAG,GAAG,EAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,SAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnB,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,KAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAC;AAChD,QAAI,EAAE,GAAG,uBAAS,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/B,uBAAM,SAAS,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,UAAC,GAAG,EAAE,MAAM,EAAK;AAC/F,UAAG,GAAG,EAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,SAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAClB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;AAED,SAAS,WAAW,CAAC,OAAO,EAAE,EAAE,EAAC;AAC/B,WAAS,eAAe,CAAC,MAAM,EAAE,EAAE,EAAC;AAClC,QAAG,2BAAa,CAAC,EAAC,EAAE,CAAC,GAAG,CAAC,EAAC;AACxB,YAAM,CAAC,MAAM,GAAG,2BAAa,CAAC,EAAE,KAAK,CAAC,CAAC;AACvC,YAAM,CAAC,QAAQ,GAAG,2BAAa,IAAI,EAAE,KAAK,CAAC,CAAC;KAC7C,MAAI;AACH,YAAM,CAAC,MAAM,GAAG,CAAC,CAAC;AAClB,YAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;KACrB;AACD,gBAAY,CAAC,EAAE,CAAC,CAAC;GAClB;AACD,qBAAM,GAAG,CAAC,OAAO,EAAE,eAAe,EAAE,UAAA,GAAG;WAAI,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC;GAAA,CAAC,CAAC;CAC9D;;AAED,SAAS,WAAW,CAAC,EAAE,EAAC;AACtB,iBAAO,OAAO,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAE,EAAE,CAAC,CAAC;CACtC;;AAED,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,EAAC;AACzB,iBAAO,OAAO,CAAC,EAAC,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAC,EAAE,EAAE,CAAC,CAAC;CAC/C;;AAED,SAAS,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,EAAC;AAChC,QAAM,CAAC,OAAO,GAAG,CAAA,EAAC,QAAM,IAAI,EAAE,SAAO,KAAK,GAAC,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC;AAC9D,iBAAO,UAAU,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAC,EAAE,EAAC,IAAI,EAAE,EAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAC,EAAC,EAAE,UAAA,GAAG,EAAI;AACpF,MAAE,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;GACjB,CAAC,CAAC;CACJ","file":"app/api/clients.js","sourcesContent":["import async from 'async';\nimport _ from 'lodash';\nimport {Client} from '../../models';\nimport {getRandomInt, ObjectId} from '../../helpers';\n\nexport function init(app){\n  app.get('/clients', function(req, res, next){\n    async.waterfall([loadClients, computeBill], (err, clients) => {\n      if(err)return next(err);\n      res.json(clients);\n    });\n  });\n\n  app.post('/clients/star', function(req, res, next){\n    let id = ObjectId(req.body.id); \n    async.waterfall([loadClient.bind(null, id), star.bind(null, req.body.starred)], (err, client) => {\n      if(err)return next(err);\n      res.json(client);\n    });\n  });\n}\n\nfunction computeBill(clients, cb){\n  function setBillElements(client, cb){\n    if(getRandomInt(0,10) > 6){\n      client.billed = getRandomInt(0, 50000);\n      client.billable = getRandomInt(5000, 75000);\n    }else{\n      client.billed = 0;\n      client.billable = 0;\n    }\n    setImmediate(cb);\n  }\n  async.map(clients, setBillElements, err => cb(err, clients));\n}\n\nfunction loadClients(cb){\n  Client.findAll({type: 'client'}, cb);\n}\n\nfunction loadClient(id, cb){\n  Client.findOne({type: 'client', _id: id}, cb);\n}\n\nfunction star(starred, client, cb){\n  client.starred = {true: true, false: false}[starred] || false;\n  Client.collection.update({_id: client._id}, {$set: {starred: client.starred}}, err => {\n    cb(err, client);\n  });\n}\n"],"sourceRoot":"/home/redpelicans/timetrack/server/src"}